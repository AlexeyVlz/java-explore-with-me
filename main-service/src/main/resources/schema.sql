CREATE TABLE IF NOT EXISTS users (
     user_id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
     user_name  VARCHAR(255) NOT NULL,
     email      VARCHAR(512) NOT NULL,
     CONSTRAINT pk_user PRIMARY KEY (user_id),
     CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
    category_id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    category_name VARCHAR(50) NOT NULL,
    CONSTRAINT    pk_category PRIMARY KEY (category_id),
    CONSTRAINT    uq_category_name UNIQUE (category_name)
);

CREATE TABLE IF NOT EXISTS locations (
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat DECIMAL NOT NULL,
    lon DECIMAL NOT NULL,
    CONSTRAINT  pk_location PRIMARY KEY (location_id)
);

CREATE TABLE IF NOT EXISTS events (
    event_id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title             VARCHAR(255) NOT NULL,
    annotation        VARCHAR(1000) NOT NULL,
    category_id       BIGINT NOT NULL,
    confirmedRequests BIGINT NOT NULL,
    createdOn         TIMESTAMP NOT NULL,
    description       VARCHAR(2000) NOT NULL,
    eventDate         TIMESTAMP NOT NULL,
    user_id           BIGINT NOT NULL,
    location_id       BIGINT NOT NULL,
    paid              BOOLEAN NOT NULL,
    participantLimit  BIGINT NOT NULL,
    publishedOn       TIMESTAMP,
    requestModeration BOOLEAN NOT NULL,
    state             varchar(50) NOT NULL,
    views             BIGINT NOT NULL,
    CONSTRAINT        pk_event PRIMARY KEY (event_id),
    CONSTRAINT        fk_events_on_categories FOREIGN KEY (category_id) REFERENCES categories(category_id),
    CONSTRAINT        fk_events_on_users FOREIGN KEY (user_id) REFERENCES  users(user_id),
    CONSTRAINT        fk_events_on_locations FOREIGN KEY (location_id) REFERENCES locations(location_id)
);


